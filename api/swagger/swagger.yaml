swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # TODO: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json; multipart/form-data
# format of the responses to the client (Accepts)
produces:
  - application/json; charset=utf-8; text/plain
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /issues:
    x-swagger-router-controller: issues
    get:
      # TODO paginate
      produces:
        - application/octet-stream
      description: Returns issues
      operationId: index
      tags:
        - issues
      responses:
        "200":
          description: Success
          schema:
            type: "file"
          # schema:
          #   $ref: "#/definitions/IssuesIndexResponse"
    post:
      consumes:
        - multipart/form-data
      produces:
        - text/plain
      parameters:
        - in: formData
          name: upfile
          type: file
      # parameters:
      #   - in: formData
      #     name: upfile
      #     description: The file
      #     required: false
      #     type: file
      operationId: create
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # "200":
        #   description: Success
        #   schema:
        #     $ref: "#/definitions/IssuesIndexResponse"
        "201":
          description: OK
          schema:
            type: string
          #     schema:
          #       type: string
          #       example: pong
          # schema:
          #   $ref: "#/definitions/IssuesIndexResponse"
  /issues/{_id}:
    x-swagger-router-controller: issues
    get:
      summary: Gets an issue by ID.
      operationId: getByID
      tags:
        - issues
      produces:
        - application/json
      parameters:
        - name: _id
          in: path
          description: Issue ID
          type: string
          # format: mongo objectid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Issue'
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  Issue:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
    required:
      - _id
      - name
  # IssuesIndexResponse:
  #   # required:
  #   #   - _id
  #   properties:
  #     _id:
  #       type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
